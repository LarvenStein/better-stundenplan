name: Build and Release App

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: pubspec.yaml # path to pubspec.yaml

    - run: flutter pub get
    #- run: flutter test
    - run: flutter build apk
    
    - name: Upload apk
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: |
          build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download APK Artifact
      uses: actions/download-artifact@v4
      with:
        name: release-apk

    - name: Set Version Environment Variable
      run: |
        version=$(grep '^version:' pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
        echo "VERSION=${version}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/apk
