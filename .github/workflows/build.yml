name: Build and Release App

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: pubspec.yaml # path to pubspec.yaml

    - name: Decode Keystore
      run: echo $ENCODED_STRING | base64 -di > /home/runner/work/better-stundenplan/release.jks
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE }}

    - run: flutter pub get
    #- run: flutter test
    - run: |
          cd android
          touch key.properties
          echo storePassword=$RELEASE_STOREPASSWORD >> key.properties
          echo keyPassword=$RELEASE_KEYPASSWORD >> key.properties
          echo keyAlias=$RELEASE_KEYALIAS >> key.properties
          echo storeFile=/home/runner/work/better-stundenplan/release.jks >> key.properties
      env:
          RELEASE_STOREPASSWORD: ${{ secrets.RELEASE_STOREPASSWORD }}
          RELEASE_KEYPASSWORD: ${{ secrets.RELEASE_KEYPASSWORD }}
          RELEASE_KEYALIAS: ${{ secrets.RELEASE_KEYALIAS }}

    - run: flutter build apk
    
    - name: Upload apk
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: |
          build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download APK Artifact
      uses: actions/download-artifact@v4
      with:
        name: release-apk

    - name: Set Version Environment Variable
      run: |
        version=$(grep '^version:' pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
        echo "VERSION=${version}" >> $GITHUB_ENV

    - name: Rename APK
      run: mv app-release.apk better_stundenplan-${{ env.VERSION }}.apk 

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: better_stundenplan-${{ env.VERSION }}.apk
        asset_name: better_stundenplan-${{ env.VERSION }}.apk
        asset_content_type: application/apk
